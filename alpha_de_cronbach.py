# -*- coding: utf-8 -*-
"""Código Python para Cálculo do Alpha de Cronbach

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1L-2YftrXDQ04E8UgwQuvrIyaLHXRdIJk
"""

import pandas as pd
import numpy as np

caminho_arquivo = 'dados_pesquisa.csv'

# Carrega os dados do arquivo CSV para um DataFrame do Pandas
try:
    df = pd.read_csv(caminho_arquivo)
except FileNotFoundError:
    print(f"Erro: O arquivo '{caminho_arquivo}' não foi encontrado.")
    # Cria um DataFrame de exemplo caso o arquivo não exista, para que o código possa rodar.
    dados_exemplo = {
        'Q1_Impulsividade': [13, 1, 1, 2, 10, 1, 1, 5, 1, 2, 6, 8, 16, 5, 8, 7, 2, 9, 6, 8, 15, 8, 2, 0, 1, 5, 6, 4, 10, 2, 9, 1, 5, 8, 3, 6, 1, 5, 12, 4],
        'Q2_Controle': [2, 0, 5, 7, 4, 1, 3, 2, 1, 0, 1, 1, 1, 4, 6, 3, 1, 4, 2, 1, 2, 1, 2, 7, 1, 2, 3, 2, 4, 1, 5, 1, 2, 3, 0, 4, 1, 2, 3, 2],
        'Q3_Conhecimento': [75, 50, 75, 50, 43, 60, 45, 60, 65, 50, 60, 75, 50, 70, 65, 75, 50, 60, 65, 70, 80, 65, 50, 90, 60, 60, 75, 50, 60, 65, 70, 50, 75, 80, 43, 60, 50, 65, 70, 75],
        'Q4_Consumo': [2, 5, 3, 1, 9, 3, 4, 4, 6, 3, 5, 5, 6, 4, 3, 4, 2, 8, 7, 6, 14, 6, 4, 0, 3, 4, 5, 3, 9, 2, 8, 3, 4, 6, 3, 6, 2, 4, 10, 3]
    }
    df = pd.DataFrame(dados_exemplo)

# Seleciona apenas as colunas (itens) que farão parte da escala
itens_da_escala = df[['Q1_Impulsividade', 'Q2_Controle', 'Q3_Conhecimento', 'Q4_Consumo']]

# --- Cálculo do Alpha de Cronbach Tradicional (Baseado em Variâncias) ---

# k: Número de itens no questionário
k = itens_da_escala.shape[1]

# Calcula a soma das variâncias de cada item individualmente
# ddof=1 é para usar a variância amostral
soma_variancias_itens = itens_da_escala.var(ddof=1).sum()

# Calcula a variância da soma total das pontuações para cada respondente
variancia_total = itens_da_escala.sum(axis=1).var(ddof=1)

# Aplica a fórmula do Alpha de Cronbach tradicional
alpha_tradicional = (k / (k - 1)) * (1 - (soma_variancias_itens / variancia_total))

# --- Cálculo do Alpha de Cronbach Padronizado (Baseado em Correlações) ---
# Este é o método correto quando as escalas dos itens são diferentes

matriz_correlacao = itens_da_escala.corr()

soma_correlacoes = matriz_correlacao.to_numpy().sum()

# O número total de elementos na matriz é k*k
# O número de correlações (excluindo a diagonal) é k*k - k
numero_correlacoes = k * k - k

# A média das correlações é a soma (menos a diagonal, que é sempre 1) dividida pelo número de correlações
r_medio = (soma_correlacoes - k) / numero_correlacoes

# Aplica a fórmula do Alpha de Cronbach padronizado
alpha_padronizado = (k * r_medio) / (1 + (k - 1) * r_medio)

print("--- ANÁLISE DE CONFIABILIDADE (ALPHA DE CRONBACH) ---")
print(f"Número de respondentes (n): {len(df)}")
print(f"Número de itens na escala (k): {k}\n")
print(f"Alpha de Cronbach Tradicional: {alpha_tradicional:.4f}")
print(f"Alpha de Cronbach Padronizado: {alpha_padronizado:.4f}")
print("\nNota: O valor padronizado é o mais indicado para este estudo devido à diferença entre as escalas das perguntas.")