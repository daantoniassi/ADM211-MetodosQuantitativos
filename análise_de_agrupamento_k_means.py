# -*- coding: utf-8 -*-
"""Código Python para Análise de Agrupamento K-Means

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1h_oguHlEjMq3Qhl8WshU5pdU0CJ6Gver
"""

import pandas as pd
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
import warnings

warnings.filterwarnings("ignore", category=FutureWarning, module='sklearn.cluster._kmeans')

caminho_arquivo = 'dados_pesquisa.csv'

# Carrega os dados do arquivo CSV para um DataFrame do Pandas
try:
    df = pd.read_csv(caminho_arquivo)
except FileNotFoundError:
    print(f"Aviso: O arquivo '{caminho_arquivo}' não foi encontrado. Usando dados de exemplo.\n")
    dados_exemplo = {
        'Q1_Impulsividade': [13, 1, 1, 2, 10, 1, 1, 5, 1, 2, 6, 8, 16, 5, 8, 7, 2, 9, 6, 8, 15, 8, 2, 0, 1, 5, 6, 4, 10, 2, 9, 1, 5, 8, 3, 6, 1, 5, 12, 4],
        'Q2_Controle': [2, 0, 5, 7, 4, 1, 3, 2, 1, 0, 1, 1, 1, 4, 6, 3, 1, 4, 2, 1, 2, 1, 2, 7, 1, 2, 3, 2, 4, 1, 5, 1, 2, 3, 0, 4, 1, 2, 3, 2],
        'Q3_Conhecimento': [75, 50, 75, 50, 43, 60, 45, 60, 65, 50, 60, 75, 50, 70, 65, 75, 50, 60, 65, 70, 80, 65, 50, 90, 60, 60, 75, 50, 60, 65, 70, 50, 75, 80, 43, 60, 50, 65, 70, 75],
        'Q4_Consumo': [2, 5, 3, 1, 9, 3, 4, 4, 6, 3, 5, 5, 6, 4, 3, 4, 2, 8, 7, 6, 14, 6, 4, 0, 3, 4, 5, 3, 9, 2, 8, 3, 4, 6, 3, 6, 2, 4, 10, 3]
    }
    df = pd.DataFrame(dados_exemplo)

colunas_analise = ['Q1_Impulsividade', 'Q2_Controle', 'Q3_Conhecimento', 'Q4_Consumo']
dados = df[colunas_analise]

print("--- ANÁLISE DE AGRUPAMENTO INDIVIDUAL ---")

for coluna in colunas_analise:
    print(f"\n--- Grupos para a variável: {coluna} ---")

    dados_variavel = dados[[coluna]].values

    kmeans = KMeans(n_clusters=3, random_state=42, n_init=10)

    kmeans.fit(dados_variavel)

    df[f'cluster_{coluna}'] = kmeans.labels_

    resumo_cluster = df.groupby(f'cluster_{coluna}')[coluna].agg(['count', 'mean', 'min', 'max']).sort_values('mean')

    print(resumo_cluster)

print("\n\n--- ANÁLISE DE AGRUPAMENTO COMBINADO (PERFIS FINAIS) ---")

# padronizar os dados antes de usar o K-Means em múltiplas variáveis
# para que as variáveis com escalas maiores (como Q3: 0-100) não dominem o cálculo.
scaler = StandardScaler()
dados_padronizados = scaler.fit_transform(dados)

kmeans_combinado = KMeans(n_clusters=3, random_state=42, n_init=10)
kmeans_combinado.fit(dados_padronizados)

df['Perfil_Consumo'] = kmeans_combinado.labels_

# Passo 4: Analisar as características de cada perfil
# Agrupamos por perfil e calculamos a média de cada variável original (não padronizada)
# para entender a característica de cada grupo.
perfis = df.groupby('Perfil_Consumo')[colunas_analise].mean().round(2)

print("\nCaracterísticas médias de cada perfil de consumo:")
print(perfis)

# Para facilitar a interpretação, podemos contar quantos membros cada perfil possui
contagem_perfis = df['Perfil_Consumo'].value_counts()
print("\nNúmero de estudantes em cada perfil:")
print(contagem_perfis)